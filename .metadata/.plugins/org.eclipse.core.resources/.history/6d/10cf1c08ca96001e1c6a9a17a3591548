/*
 * stm32f407_i2c_driver.h
 *
 *  Created on: 23-Jul-2023
 *      Author: wardawg
 */

#ifndef INC_STM32F407_I2C_DRIVER_H_
#define INC_STM32F407_I2C_DRIVER_H_
/*
 * Creating the Configuration Structure for the I2C Peripherals
 */
typedef struct{
	uint32_t I2C_SCLSpeed;				//Used to control the speed of transfer
	uint8_t I2C_DeviceAddress;			//Slave device, set by the user
	unit8_t I2C_Ack_Control;			//Used to control the generation of the ACK bit aster successful reception of the data
	uint8_t FMDutyCycle;				//
}I2C_Config_t;

/*
 * Creating the handle structure for the I2C Peripheral
 */

typedef struct{
	I2C_RegDef_t *pI2Cx;
	I2C_Config_t I2C_Config;
};


/*
 * @I2C_SCLSpeed
 */
#define I2C_SCL_SPEED_SM   100000
#define I2C_SCL_SPEED_FM4k 400000
#define I2C_SCL_SPEED_FM4k 200000

/*
 * @I2C_Ack_Control
 */

#define I2C_ACK_ENABLE		1
#define I2C_ACK_DISABLE		0

/*
 * @I2C_FMDutyCycle
 */

#define I2C_FM_Duty_2		0
#define I2C_FM_Duty_16_9	1
/******************************************************************************************
 *								APIs supported by this driver
 *		 For more information about the APIs check the function definitions
 ******************************************************************************************/

void I2C_PeriClockControl(I2C_RegDef_t *pI2Cx, uint8_t EnorDi);

/*
 * Init and De-init
 */
void I2C_Init(I2C_Handle_t *pI2CHandle);
void I2C_DeInit(I2C_RegDef_t *pI2Cx);


/*
 * Data Send and Receive
 */


/*
 * IRQ Configuration and ISR handling
 */
void I2C_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi);
void I2C_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority);


/*
 * Other Peripheral Control APIs
 */
void I2C_PeripheralControl(I2C_RegDef_t *pI2Cx, uint8_t EnOrDi);
uint8_t I2C_GetFlagStatus(I2C_RegDef_t *pI2Cx , uint32_t FlagName);

/*
 * Application callback
 */
void I2C_ApplicationEventCallback(I2C_Handle_t *pI2CHandle,uint8_t AppEv);



#endif /* INC_STM32F407_I2C_DRIVER_H_ */
